extension extensions::com;

context ARRoot::Com::ComConfig::ComSignal ERROR "Missing shortName " :
	shortName != null;

/*<%for (Com.ComConfig.ComSignal){%>

/*  <%-- ComBitPosition parameter verification --%>
    <%if (!ComBitPosition.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing BitPosition for signal " + _shortname)%>
    <%}%>*/
context ARRoot::Com::ComConfig::ComSignal ERROR "Missing BitPosition for signal " + shortName :
	ComBitPosition != null;
  
/*  <%if (ComSignalType.isUINT8_N && (ComBitPosition.value != (ComBitPosition.value/8)*8)){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Wrong BitPosition for group signal " + _shortname + " : signals of type UINT8_N must be byte-aligned.")%>
    <%}%>*/
context ARRoot::Com::ComConfig::ComSignal ERROR "Wrong BitPosition " + ComBitPosition + " for group signal " + shortName + " : signals of type UINT8_N must be byte-aligned." :
	!(ComSignalType.isUINT8_N() && (ComBitPosition != (ComBitPosition.value/8)*8));
        
/*    <%-- ComBitSize parameter verification --%>
    <%if (!ComBitSize.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing BitSize for signal " + _shortname)%>
    <%}%>*/
context ARRoot::Com::ComConfig::ComSignal ERROR "Missing BitSize for signal " + shortName :
	ComBitSize != null;

/*  <%if (ComBitSize.value < 1){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Wrong BitSize for signal " + _shortname)%>
    <%}%>*/
context ARRoot::Com::ComConfig::ComSignal ERROR "Wrong BitSize for signal " + shortName :
	ComBitSize >= 1;
  
/*  <%-- Signal handle Id --%>
    <%if (!ComHandleId.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing handle Id for signal : " + _shortname)%>
    <%}%> */
context ARRoot::Com::ComConfig::ComSignal ERROR "Missing handle Id for signal " + shortName :
	ComHandleId != null;
    
/*  <%-- ComSignalDataInvalidValue parameter verification --%>
    <%if (ComSignalDataInvalidValue.isPresent() && !ComSignalDataInvalidValue.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Signal invalid value parameter is present but not configured for signal : " + _shortname)%>
    <%}%>*/
context ARRoot::Com::ComConfig::ComSignal ERROR "Signal invalid value parameter is present but not configured for signal " 
    
/*  <%-- ComSignalEndianess parameter verification --%>
    <%if (!ComSignalEndianess.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComSignalEndianess for signal : " + _shortname)%>
    <%}%>
    <%if (ComSignalEndianess.isOPAQUE && (!ComSignalType.isUINT8_N)){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : If endianess is opaque, type must be uint8[n] : signal : " + _shortname)%>
    <%}%>
    <%-- Signal init value --%>
    <%if (ComSignalInitValue.isPresent() && !ComSignalInitValue.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Signal init value parameter is present but not configured for signal " + _shortname)%>
    <%}%>
    <%if (ComSignalInitValue.isConfig() && ComSignalDataInvalidValue.isConfig()){%>
        <%if (ComSignalInitValue.value == ComSignalDataInvalidValue.value){%>
<%varAdd("WarningCounter",1)%><%logAsWarning("Warning : Init value and invalid value are the same for signal " + _shortname)%>
        <%}%>
    <%}%>
    <%-- Signal length parameter verification --%>
    <%if (ComSignalType.isUINT8_N && !ComSignalLength.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComSignalLength for signal : " + _shortname)%>
    <%}%>
    <%if (ComSignalType.isUINT8_N && ComSignalLength.isConfig() && (ComSignalLength.value == 0)){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : ComSignalLength can not be 0 for signal : " + _shortname)%>
    <%}%>
    <%-- Signal type parameter verification --%>
    <%if (!ComSignalType.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing signal type for signal : " + _shortname)%>
    <%}%>
    <%-- Timeout factor parameters verification --%>
    <%if (ComFirstTimeoutFactor.isConfig() && !ComTimeoutFactor.isConfig()){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Timeout factor must be configured if first timeout factor is configured for signal " + _shortname)%>
    <%}%>
    <%if (!ComFirstTimeoutFactor.isConfig() && ComTimeoutFactor.isConfig()){%>
<%varAdd("InfoCounter",1)%><%logAsInfo("Info : Timeout factor is configured but no first timeout factor is configured so default value 0 will be taken for signal " + _shortname)%>
    <%}%>
    <%-- ComFilter container verification --%>
    <%if (ComFilter[!ComFilterAlgorithm.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterAlgorithm for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComSignalType.isUINT8_N && ComFilter[!ComFilterAlgorithm.isALWAYS && !ComFilterAlgorithm.isNEVER]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Signal of type uint8[n] only support F_Always and F_Never filters.
        So wrong filter algorithm for signal : " + _shortname)%>
    <%}%>
    <%if (ComSignalType.isBOOLEAN && ComFilter[ComFilterAlgorithm.isNEW_IS_OUTSIDE || ComFilterAlgorithm.isNEW_IS_WITHIN]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Signal of type boolean does not support F_NewIsWithin and F_NewIsOutside filters.
        So wrong filter algorithm for signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isMASKED_NEW_DIFFERS_MASKED_OLD && !ComFilterMask.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMask for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isMASKED_NEW_DIFFERS_X && !ComFilterMask.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMask for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isMASKED_NEW_DIFFERS_X && !ComFilterX.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterX for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isMASKED_NEW_EQUALS_X && !ComFilterMask.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMask for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isMASKED_NEW_EQUALS_X && !ComFilterX.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterX for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isNEW_IS_OUTSIDE && !ComFilterMax.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMax for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isNEW_IS_OUTSIDE && !ComFilterMin.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMin for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isNEW_IS_WITHIN && !ComFilterMax.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMax for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isNEW_IS_WITHIN && !ComFilterMin.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterMin for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isONE_EVERY_N && !ComFilterOffset.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterOffset for filter of signal : " + _shortname)%>
    <%}%>
    <%if (ComFilter[ComFilterAlgorithm.isONE_EVERY_N && !ComFilterPeriodFactor.isConfig()]){%>
<%varAdd("ErrorCounter",1)%><%logAsError("Error : Missing ComFilterPeriodFactor for filter of signal : " + _shortname)%>
    <%}%>
<%}%>*/