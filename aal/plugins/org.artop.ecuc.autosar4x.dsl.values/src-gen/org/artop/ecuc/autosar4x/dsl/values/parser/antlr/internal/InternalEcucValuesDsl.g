/*
* generated by Xtext
*/
grammar InternalEcucValuesDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.artop.ecuc.autosar4x.dsl.values.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.artop.ecuc.autosar4x.dsl.values.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.artop.ecuc.autosar4x.dsl.values.services.EcucValuesDslGrammarAccess;

}

@parser::members {

 	private EcucValuesDslGrammarAccess grammarAccess;
 	
    public InternalEcucValuesDslParser(TokenStream input, EcucValuesDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EcucValuesDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getPackageKeyword_0_0());
    }
(
(
		lv_packageName_1_0=RULE_ID
		{
			newLeafNode(lv_packageName_1_0, grammarAccess.getModelAccess().getPackageNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"packageName",
        		lv_packageName_1_0, 
        		"ID");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getModulesModuleParserRuleCall_1_0()); 
	    }
		lv_modules_2_0=ruleModule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"modules",
        		lv_modules_2_0, 
        		"Module");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	 iv_ruleModule=ruleModule 
	 { $current=$iv_ruleModule.current; } 
	 EOF 
;

// Rule Module
ruleModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModuleAccess().getModuleAction_0(),
            $current);
    }
)	otherlv_1='module' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModuleRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getModuleAccess().getDefinitionEcucModuleDefCrossReference_2_0()); 
	}

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3_0());
    }
(
(
		lv_shortName_4_0=RULE_ID
		{
			newLeafNode(lv_shortName_4_0, grammarAccess.getModuleAccess().getShortNameIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shortName",
        		lv_shortName_4_0, 
        		"ID");
	    }

)
))?(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModuleAccess().getLeftParenthesisKeyword_4_0());
    }
(	otherlv_6='tags' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModuleAccess().getTagsKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getTagsTagParserRuleCall_4_1_1_0()); 
	    }
		lv_tags_7_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_7_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModuleAccess().getCommaKeyword_4_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getTagsTagParserRuleCall_4_1_2_1_0()); 
	    }
		lv_tags_9_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_9_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getModuleAccess().getRightParenthesisKeyword_4_2());
    }
)?	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getModuleAccess().getEqualsSignKeyword_5());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getContainerContainerParserRuleCall_7_0()); 
	    }
		lv_container_13_0=ruleContainer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"container",
        		lv_container_13_0, 
        		"Container");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleContainedElement
entryRuleContainedElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainedElementRule()); }
	 iv_ruleContainedElement=ruleContainedElement 
	 { $current=$iv_ruleContainedElement.current; } 
	 EOF 
;

// Rule ContainedElement
ruleContainedElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContainedElementAccess().getContainerParserRuleCall_0()); 
    }
    this_Container_0=ruleContainer
    { 
        $current = $this_Container_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContainedElementAccess().getParameterParserRuleCall_1()); 
    }
    this_Parameter_1=ruleParameter
    { 
        $current = $this_Parameter_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContainedElementAccess().getReferenceParserRuleCall_2()); 
    }
    this_Reference_2=ruleReference
    { 
        $current = $this_Reference_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContainedElementAccess().getInstanceReferenceParserRuleCall_3()); 
    }
    this_InstanceReference_3=ruleInstanceReference
    { 
        $current = $this_InstanceReference_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleContainer
entryRuleContainer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContainerRule()); }
	 iv_ruleContainer=ruleContainer 
	 { $current=$iv_ruleContainer.current; } 
	 EOF 
;

// Rule Container
ruleContainer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getContainerAccess().getContainerAction_0(),
            $current);
    }
)	otherlv_1='container' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContainerAccess().getContainerKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainerRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getContainerAccess().getDefinitionEcucContainerDefCrossReference_2_0()); 
	}

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContainerAccess().getColonKeyword_3_0());
    }
(
(
		lv_shortName_4_0=RULE_ID
		{
			newLeafNode(lv_shortName_4_0, grammarAccess.getContainerAccess().getShortNameIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shortName",
        		lv_shortName_4_0, 
        		"ID");
	    }

)
))?(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getContainerAccess().getLeftParenthesisKeyword_4_0());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getContainerAccess().getUnorderedGroup_4_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getContainerAccess().getUnorderedGroup_4_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getContainerAccess().getUnorderedGroup_4_1(), 0);
	 				}
					({true}?=>(	otherlv_7='index' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getContainerAccess().getIndexKeyword_4_1_0_0());
    }
(
(
		lv_index_8_0=RULE_INT
		{
			newLeafNode(lv_index_8_0, grammarAccess.getContainerAccess().getIndexINTTerminalRuleCall_4_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_8_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getContainerAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getContainerAccess().getUnorderedGroup_4_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getContainerAccess().getUnorderedGroup_4_1(), 1);
	 				}
					({true}?=>(	otherlv_9='tags' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getContainerAccess().getTagsKeyword_4_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getTagsTagParserRuleCall_4_1_1_1_0()); 
	    }
		lv_tags_10_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_10_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getContainerAccess().getCommaKeyword_4_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getTagsTagParserRuleCall_4_1_1_2_1_0()); 
	    }
		lv_tags_12_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_12_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getContainerAccess().getUnorderedGroup_4_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getContainerAccess().getUnorderedGroup_4_1());
	}

)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getContainerAccess().getRightParenthesisKeyword_4_2());
    }
)?	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getContainerAccess().getEqualsSignKeyword_5());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getContainerAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainerAccess().getElementsContainedElementParserRuleCall_7_0()); 
	    }
		lv_elements_16_0=ruleContainedElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainerRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_16_0, 
        		"ContainedElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getContainerAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterAccess().getParameterAction_0(),
            $current);
    }
)	otherlv_1='param' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParamKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getDefinitionEcucParameterDefCrossReference_2_0()); 
	}

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getValueSimpleValueParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleSimpleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"SimpleValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getLeftParenthesisKeyword_5_0());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getParameterAccess().getUnorderedGroup_5_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getParameterAccess().getUnorderedGroup_5_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getParameterAccess().getUnorderedGroup_5_1(), 0);
	 				}
					({true}?=>(	otherlv_7='index' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterAccess().getIndexKeyword_5_1_0_0());
    }
(
(
		lv_index_8_0=RULE_INT
		{
			newLeafNode(lv_index_8_0, grammarAccess.getParameterAccess().getIndexINTTerminalRuleCall_5_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_8_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParameterAccess().getUnorderedGroup_5_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getParameterAccess().getUnorderedGroup_5_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getParameterAccess().getUnorderedGroup_5_1(), 1);
	 				}
					({true}?=>(	otherlv_9='tags' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getParameterAccess().getTagsKeyword_5_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTagsTagParserRuleCall_5_1_1_1_0()); 
	    }
		lv_tags_10_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_10_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getParameterAccess().getCommaKeyword_5_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTagsTagParserRuleCall_5_1_1_2_1_0()); 
	    }
		lv_tags_12_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_12_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getParameterAccess().getUnorderedGroup_5_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getParameterAccess().getUnorderedGroup_5_1());
	}

)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getParameterAccess().getRightParenthesisKeyword_5_2());
    }
)?)
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReferenceAccess().getReferenceAction_0(),
            $current);
    }
)	otherlv_1='ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceAccess().getRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getDefinitionEcucAbstractReferenceDefCrossReference_2_0()); 
	}

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getValueReferenceValueParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleReferenceValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"ReferenceValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReferenceAccess().getLeftParenthesisKeyword_5_0());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1(), 0);
	 				}
					({true}?=>(	otherlv_7='index' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReferenceAccess().getIndexKeyword_5_1_0_0());
    }
(
(
		lv_index_8_0=RULE_INT
		{
			newLeafNode(lv_index_8_0, grammarAccess.getReferenceAccess().getIndexINTTerminalRuleCall_5_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_8_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1(), 1);
	 				}
					({true}?=>(	otherlv_9='tags' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getReferenceAccess().getTagsKeyword_5_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getTagsTagParserRuleCall_5_1_1_1_0()); 
	    }
		lv_tags_10_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_10_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getReferenceAccess().getCommaKeyword_5_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceAccess().getTagsTagParserRuleCall_5_1_1_2_1_0()); 
	    }
		lv_tags_12_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_12_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getReferenceAccess().getUnorderedGroup_5_1());
	}

)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getReferenceAccess().getRightParenthesisKeyword_5_2());
    }
)?)
;





// Entry rule entryRuleInstanceReference
entryRuleInstanceReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceReferenceRule()); }
	 iv_ruleInstanceReference=ruleInstanceReference 
	 { $current=$iv_ruleInstanceReference.current; } 
	 EOF 
;

// Rule InstanceReference
ruleInstanceReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstanceReferenceAccess().getInstanceReferenceAction_0(),
            $current);
    }
)	otherlv_1='iref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceReferenceAccess().getIrefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceReferenceRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInstanceReferenceAccess().getDefinitionEcucAbstractReferenceDefCrossReference_2_0()); 
	}

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInstanceReferenceAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceReferenceAccess().getValueInstanceReferenceValueParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleInstanceReferenceValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceReferenceRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"InstanceReferenceValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstanceReferenceAccess().getLeftParenthesisKeyword_5_0());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1(), 0);
	 				}
					({true}?=>(	otherlv_7='index' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstanceReferenceAccess().getIndexKeyword_5_1_0_0());
    }
(
(
		lv_index_8_0=RULE_INT
		{
			newLeafNode(lv_index_8_0, grammarAccess.getInstanceReferenceAccess().getIndexINTTerminalRuleCall_5_1_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"index",
        		lv_index_8_0, 
        		"INT");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1(), 1);
	 				}
					({true}?=>(	otherlv_9='tags' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInstanceReferenceAccess().getTagsKeyword_5_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceReferenceAccess().getTagsTagParserRuleCall_5_1_1_1_0()); 
	    }
		lv_tags_10_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceReferenceRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_10_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInstanceReferenceAccess().getCommaKeyword_5_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceReferenceAccess().getTagsTagParserRuleCall_5_1_1_2_1_0()); 
	    }
		lv_tags_12_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceReferenceRule());
	        }
       		add(
       			$current, 
       			"tags",
        		lv_tags_12_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInstanceReferenceAccess().getUnorderedGroup_5_1());
	}

)	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInstanceReferenceAccess().getRightParenthesisKeyword_5_2());
    }
)?)
;





// Entry rule entryRuleReferenceValue
entryRuleReferenceValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceValueRule()); }
	 iv_ruleReferenceValue=ruleReferenceValue 
	 { $current=$iv_ruleReferenceValue.current; } 
	 EOF 
;

// Rule ReferenceValue
ruleReferenceValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getReferenceValueAccess().getContainerEObjectCrossReference_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleInstanceReferenceValue
entryRuleInstanceReferenceValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceReferenceValueRule()); }
	 iv_ruleInstanceReferenceValue=ruleInstanceReferenceValue 
	 { $current=$iv_ruleInstanceReferenceValue.current; } 
	 EOF 
;

// Rule InstanceReferenceValue
ruleInstanceReferenceValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceReferenceValueAccess().getContextsContextChainParserRuleCall_0_0()); 
	    }
		lv_contexts_0_0=ruleContextChain		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceReferenceValueRule());
	        }
       		set(
       			$current, 
       			"contexts",
        		lv_contexts_0_0, 
        		"ContextChain");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstanceReferenceValueAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstanceReferenceValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getInstanceReferenceValueAccess().getTargetEObjectCrossReference_2_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleContextChain
entryRuleContextChain returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextChainRule()); }
	 iv_ruleContextChain=ruleContextChain 
	 { $current=$iv_ruleContextChain.current; } 
	 EOF 
;

// Rule ContextChain
ruleContextChain returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContextChainAccess().getContextParserRuleCall_0()); 
    }
    this_Context_0=ruleContext
    { 
        $current = $this_Context_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getContextChainAccess().getContextChainPrevAction_1_0(),
            $current);
    }
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContextChainAccess().getCommaKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContextChainRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContextChainAccess().getObjectEObjectCrossReference_1_2_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	 iv_ruleContext=ruleContext 
	 { $current=$iv_ruleContext.current; } 
	 EOF 
;

// Rule Context
ruleContext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getContextAccess().getContextAction_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContextAccess().getStartEObjectCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSimpleValue
entryRuleSimpleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleValueRule()); }
	 iv_ruleSimpleValue=ruleSimpleValue 
	 { $current=$iv_ruleSimpleValue.current; } 
	 EOF 
;

// Rule SimpleValue
ruleSimpleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSimpleValueAccess().getStringValueParserRuleCall_0()); 
    }
    this_StringValue_0=ruleStringValue
    { 
        $current = $this_StringValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleValueAccess().getNumericValueParserRuleCall_1()); 
    }
    this_NumericValue_1=ruleNumericValue
    { 
        $current = $this_NumericValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleValueAccess().getBooleanValueParserRuleCall_2()); 
    }
    this_BooleanValue_2=ruleBooleanValue
    { 
        $current = $this_BooleanValue_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleValueAccess().getEnumValueParserRuleCall_3()); 
    }
    this_EnumValue_3=ruleEnumValue
    { 
        $current = $this_EnumValue_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	 iv_ruleStringValue=ruleStringValue 
	 { $current=$iv_ruleStringValue.current; } 
	 EOF 
;

// Rule StringValue
ruleStringValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleEnumValue
entryRuleEnumValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumValueRule()); }
	 iv_ruleEnumValue=ruleEnumValue 
	 { $current=$iv_ruleEnumValue.current; } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumValueAccess().getLiteralEIDParserRuleCall_0()); 
	    }
		lv_literal_0_0=ruleEID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumValueRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_0_0, 
        		"EID");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEID
entryRuleEID returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getEIDRule()); } 
	 iv_ruleEID=ruleEID 
	 { $current=$iv_ruleEID.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EID
ruleEID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIDAccess().getFullStopKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEIDAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	 iv_ruleBooleanValue=ruleBooleanValue 
	 { $current=$iv_ruleBooleanValue.current; } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanValueAccess().getValueBooleanLiteralEnumRuleCall_0()); 
	    }
		lv_value_0_0=ruleBooleanLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"BooleanLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNumericValue
entryRuleNumericValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumericValueRule()); }
	 iv_ruleNumericValue=ruleNumericValue 
	 { $current=$iv_ruleNumericValue.current; } 
	 EOF 
;

// Rule NumericValue
ruleNumericValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericValueAccess().getValueNUMERICParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleNUMERIC		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"NUMERIC");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	 iv_ruleTag=ruleTag 
	 { $current=$iv_ruleTag.current; } 
	 EOF 
;

// Rule Tag
ruleTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTagAccess().getKeyKEYParserRuleCall_0_0()); 
	    }
		lv_key_0_0=ruleKEY		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"KEY");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTagAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagAccess().getValueVALUEParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"VALUE");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVALUE
entryRuleVALUE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVALUERule()); } 
	 iv_ruleVALUE=ruleVALUE 
	 { $current=$iv_ruleVALUE.current.getText(); }  
	 EOF 
;

// Rule VALUE
ruleVALUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getVALUEAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getVALUEAccess().getIDTerminalRuleCall_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getVALUEAccess().getNUMERICParserRuleCall_2()); 
    }
    this_NUMERIC_2=ruleNUMERIC    {
		$current.merge(this_NUMERIC_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVALUEAccess().getTrueKeyword_3()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVALUEAccess().getFalseKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleKEY
entryRuleKEY returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getKEYRule()); } 
	 iv_ruleKEY=ruleKEY 
	 { $current=$iv_ruleKEY.current.getText(); }  
	 EOF 
;

// Rule KEY
ruleKEY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getKEYAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getKEYAccess().getIDTerminalRuleCall_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getKEYAccess().getNUMERICParserRuleCall_2()); 
    }
    this_NUMERIC_2=ruleNUMERIC    {
		$current.merge(this_NUMERIC_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKEYAccess().getTrueKeyword_3()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKEYAccess().getFalseKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleNUMERIC
entryRuleNUMERIC returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNUMERICRule()); } 
	 iv_ruleNUMERIC=ruleNUMERIC 
	 { $current=$iv_ruleNUMERIC.current.getText(); }  
	 EOF 
;

// Rule NUMERIC
ruleNUMERIC returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNUMERICAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getNUMERICAccess().getINTTerminalRuleCall_1()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNUMERICAccess().getFullStopKeyword_2_0()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getNUMERICAccess().getINTTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getSolidusKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;
finally {
	myHiddenTokenState.restore();
}





// Rule BooleanLiteral
ruleBooleanLiteral returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='true' 
	{
        $current = grammarAccess.getBooleanLiteralAccess().getTrueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBooleanLiteralAccess().getTrueEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='false' 
	{
        $current = grammarAccess.getBooleanLiteralAccess().getFalseEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBooleanLiteralAccess().getFalseEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


