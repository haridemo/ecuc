/*
* generated by Xtext
*/
package org.artop.ecuc.autosar4x.dsl.paramdef.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ParamDefDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cPackageNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPackageNameIDTerminalRuleCall_0_1_0 = (RuleCall)cPackageNameAssignment_0_1.eContents().get(0);
		private final Assignment cModulesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cModulesModuleDefParserRuleCall_1_0 = (RuleCall)cModulesAssignment_1.eContents().get(0);
		
		//Model:
		//	("package" packageName=ID)? modules+=ModuleDef*;
		public ParserRule getRule() { return rule; }

		//("package" packageName=ID)? modules+=ModuleDef*
		public Group getGroup() { return cGroup; }

		//("package" packageName=ID)?
		public Group getGroup_0() { return cGroup_0; }

		//"package"
		public Keyword getPackageKeyword_0_0() { return cPackageKeyword_0_0; }

		//packageName=ID
		public Assignment getPackageNameAssignment_0_1() { return cPackageNameAssignment_0_1; }

		//ID
		public RuleCall getPackageNameIDTerminalRuleCall_0_1_0() { return cPackageNameIDTerminalRuleCall_0_1_0; }

		//modules+=ModuleDef*
		public Assignment getModulesAssignment_1() { return cModulesAssignment_1; }

		//ModuleDef
		public RuleCall getModulesModuleDefParserRuleCall_1_0() { return cModulesModuleDefParserRuleCall_1_0; }
	}

	public class ModuleDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModuleDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cDescKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Assignment cDescAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_2_1_0_1_0 = (RuleCall)cDescAssignment_2_1_0_1.eContents().get(0);
		private final Group cGroup_2_1_1 = (Group)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cTagsKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cTagsAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_2_1_1_1_0 = (RuleCall)cTagsAssignment_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_1_1_2 = (Group)cGroup_2_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_1_2_0 = (Keyword)cGroup_2_1_1_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1_1_2_1 = (Assignment)cGroup_2_1_1_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_2_1_1_2_1_0 = (RuleCall)cTagsAssignment_2_1_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContainerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContainerAbstractContainerDefParserRuleCall_4_0 = (RuleCall)cContainerAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ModuleDef:
		//	"module" name=ID ("(" (("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?) ")")? "{"
		//	container+=AbstractContainerDef* "}";
		public ParserRule getRule() { return rule; }

		//"module" name=ID ("(" (("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?) ")")? "{"
		//container+=AbstractContainerDef* "}"
		public Group getGroup() { return cGroup; }

		//"module"
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" (("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?) ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }

		//("desc" desc=STRING)?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"desc"
		public Keyword getDescKeyword_2_1_0_0() { return cDescKeyword_2_1_0_0; }

		//desc=STRING
		public Assignment getDescAssignment_2_1_0_1() { return cDescAssignment_2_1_0_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_2_1_0_1_0() { return cDescSTRINGTerminalRuleCall_2_1_0_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//"tags"
		public Keyword getTagsKeyword_2_1_1_0() { return cTagsKeyword_2_1_1_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_2_1_1_1() { return cTagsAssignment_2_1_1_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_2_1_1_1_0() { return cTagsTagParserRuleCall_2_1_1_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_2_1_1_2() { return cGroup_2_1_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_1_2_0() { return cCommaKeyword_2_1_1_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_2_1_1_2_1() { return cTagsAssignment_2_1_1_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_2_1_1_2_1_0() { return cTagsTagParserRuleCall_2_1_1_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//container+=AbstractContainerDef*
		public Assignment getContainerAssignment_4() { return cContainerAssignment_4; }

		//AbstractContainerDef
		public RuleCall getContainerAbstractContainerDefParserRuleCall_4_0() { return cContainerAbstractContainerDefParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AbstractContainerDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractContainerDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContainerDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cChoiceContainerDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractContainerDef:
		//	ContainerDef | ChoiceContainerDef;
		public ParserRule getRule() { return rule; }

		//ContainerDef | ChoiceContainerDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//ContainerDef
		public RuleCall getContainerDefParserRuleCall_0() { return cContainerDefParserRuleCall_0; }

		//ChoiceContainerDef
		public RuleCall getChoiceContainerDefParserRuleCall_1() { return cChoiceContainerDefParserRuleCall_1; }
	}

	public class ContainerDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContainerDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cRequiresIndexKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Alternatives cAlternatives_2_1_0_1 = (Alternatives)cGroup_2_1_0.eContents().get(1);
		private final Assignment cRequiresIndexAssignment_2_1_0_1_0 = (Assignment)cAlternatives_2_1_0_1.eContents().get(0);
		private final Keyword cRequiresIndexTrueKeyword_2_1_0_1_0_0 = (Keyword)cRequiresIndexAssignment_2_1_0_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_2_1_0_1_1 = (Keyword)cAlternatives_2_1_0_1.eContents().get(1);
		private final Group cGroup_2_1_1 = (Group)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cDescKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cDescAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_2_1_1_1_0 = (RuleCall)cDescAssignment_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cUnorderedGroup_2_1.eContents().get(2);
		private final Keyword cTagsKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_2_1_2_1_0 = (RuleCall)cTagsAssignment_2_1_2_1.eContents().get(0);
		private final Group cGroup_2_1_2_2 = (Group)cGroup_2_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_2_0 = (Keyword)cGroup_2_1_2_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1_2_2_1 = (Assignment)cGroup_2_1_2_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_2_1_2_2_1_0 = (RuleCall)cTagsAssignment_2_1_2_2_1.eContents().get(0);
		private final Group cGroup_2_1_3 = (Group)cUnorderedGroup_2_1.eContents().get(3);
		private final Keyword cLowerMultiplicityKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cLowerMultiplicityAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_2_1_3_1_0 = (RuleCall)cLowerMultiplicityAssignment_2_1_3_1.eContents().get(0);
		private final Group cGroup_2_1_4 = (Group)cUnorderedGroup_2_1.eContents().get(4);
		private final Keyword cUpperMultiplicityKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Assignment cUpperMultiplicityAssignment_2_1_4_1 = (Assignment)cGroup_2_1_4.eContents().get(1);
		private final RuleCall cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_2_1_4_1_0 = (RuleCall)cUpperMultiplicityAssignment_2_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Assignment cContainerAssignment_4_0 = (Assignment)cAlternatives_4.eContents().get(0);
		private final RuleCall cContainerAbstractContainerDefParserRuleCall_4_0_0 = (RuleCall)cContainerAssignment_4_0.eContents().get(0);
		private final Assignment cParameterAssignment_4_1 = (Assignment)cAlternatives_4.eContents().get(1);
		private final RuleCall cParameterParameterDefParserRuleCall_4_1_0 = (RuleCall)cParameterAssignment_4_1.eContents().get(0);
		private final Assignment cReferencesAssignment_4_2 = (Assignment)cAlternatives_4.eContents().get(2);
		private final RuleCall cReferencesAbstractReferenceDefParserRuleCall_4_2_0 = (RuleCall)cReferencesAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ContainerDef:
		//	"container" name=ID ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags"
		//	tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")? "{" (container+=AbstractContainerDef | parameter+=ParameterDef |
		//	references+=AbstractReferenceDef)* "}";
		public ParserRule getRule() { return rule; }

		//"container" name=ID ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags"
		//tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")? "{" (container+=AbstractContainerDef | parameter+=ParameterDef |
		//references+=AbstractReferenceDef)* "}"
		public Group getGroup() { return cGroup; }

		//"container"
		public Keyword getContainerKeyword_0() { return cContainerKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag (","
		//tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }

		//("requiresIndex" (requiresIndex?="true" | "false"))?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"requiresIndex"
		public Keyword getRequiresIndexKeyword_2_1_0_0() { return cRequiresIndexKeyword_2_1_0_0; }

		//requiresIndex?="true" | "false"
		public Alternatives getAlternatives_2_1_0_1() { return cAlternatives_2_1_0_1; }

		//requiresIndex?="true"
		public Assignment getRequiresIndexAssignment_2_1_0_1_0() { return cRequiresIndexAssignment_2_1_0_1_0; }

		//"true"
		public Keyword getRequiresIndexTrueKeyword_2_1_0_1_0_0() { return cRequiresIndexTrueKeyword_2_1_0_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_2_1_0_1_1() { return cFalseKeyword_2_1_0_1_1; }

		//("desc" desc=STRING)?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//"desc"
		public Keyword getDescKeyword_2_1_1_0() { return cDescKeyword_2_1_1_0; }

		//desc=STRING
		public Assignment getDescAssignment_2_1_1_1() { return cDescAssignment_2_1_1_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_2_1_1_1_0() { return cDescSTRINGTerminalRuleCall_2_1_1_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//"tags"
		public Keyword getTagsKeyword_2_1_2_0() { return cTagsKeyword_2_1_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_2_1_2_1() { return cTagsAssignment_2_1_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_2_1_2_1_0() { return cTagsTagParserRuleCall_2_1_2_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_2_1_2_2() { return cGroup_2_1_2_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_2_0() { return cCommaKeyword_2_1_2_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_2_1_2_2_1() { return cTagsAssignment_2_1_2_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_2_1_2_2_1_0() { return cTagsTagParserRuleCall_2_1_2_2_1_0; }

		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)?
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }

		//"lowerMultiplicity"
		public Keyword getLowerMultiplicityKeyword_2_1_3_0() { return cLowerMultiplicityKeyword_2_1_3_0; }

		//lowerMultiplicity=LOWER_MULTIPLICITY
		public Assignment getLowerMultiplicityAssignment_2_1_3_1() { return cLowerMultiplicityAssignment_2_1_3_1; }

		//LOWER_MULTIPLICITY
		public RuleCall getLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_2_1_3_1_0() { return cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_2_1_3_1_0; }

		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }

		//"upperMultiplicity"
		public Keyword getUpperMultiplicityKeyword_2_1_4_0() { return cUpperMultiplicityKeyword_2_1_4_0; }

		//upperMultiplicity=UPPER_MULTIPLICITY
		public Assignment getUpperMultiplicityAssignment_2_1_4_1() { return cUpperMultiplicityAssignment_2_1_4_1; }

		//UPPER_MULTIPLICITY
		public RuleCall getUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_2_1_4_1_0() { return cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_2_1_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(container+=AbstractContainerDef | parameter+=ParameterDef | references+=AbstractReferenceDef)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//container+=AbstractContainerDef
		public Assignment getContainerAssignment_4_0() { return cContainerAssignment_4_0; }

		//AbstractContainerDef
		public RuleCall getContainerAbstractContainerDefParserRuleCall_4_0_0() { return cContainerAbstractContainerDefParserRuleCall_4_0_0; }

		//parameter+=ParameterDef
		public Assignment getParameterAssignment_4_1() { return cParameterAssignment_4_1; }

		//ParameterDef
		public RuleCall getParameterParameterDefParserRuleCall_4_1_0() { return cParameterParameterDefParserRuleCall_4_1_0; }

		//references+=AbstractReferenceDef
		public Assignment getReferencesAssignment_4_2() { return cReferencesAssignment_4_2; }

		//AbstractReferenceDef
		public RuleCall getReferencesAbstractReferenceDefParserRuleCall_4_2_0() { return cReferencesAbstractReferenceDefParserRuleCall_4_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ContainerElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContainerElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbstractContainerDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParameterDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cReferenceDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cInstanceReferenceDefParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ContainerElement:
		//	AbstractContainerDef | ParameterDef | ReferenceDef | InstanceReferenceDef;
		public ParserRule getRule() { return rule; }

		//AbstractContainerDef | ParameterDef | ReferenceDef | InstanceReferenceDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//AbstractContainerDef
		public RuleCall getAbstractContainerDefParserRuleCall_0() { return cAbstractContainerDefParserRuleCall_0; }

		//ParameterDef
		public RuleCall getParameterDefParserRuleCall_1() { return cParameterDefParserRuleCall_1; }

		//ReferenceDef
		public RuleCall getReferenceDefParserRuleCall_2() { return cReferenceDefParserRuleCall_2; }

		//InstanceReferenceDef
		public RuleCall getInstanceReferenceDefParserRuleCall_3() { return cInstanceReferenceDefParserRuleCall_3; }
	}

	public class ChoiceContainerDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChoiceContainerDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cRequiresIndexKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Alternatives cAlternatives_2_1_0_1 = (Alternatives)cGroup_2_1_0.eContents().get(1);
		private final Assignment cRequiresIndexAssignment_2_1_0_1_0 = (Assignment)cAlternatives_2_1_0_1.eContents().get(0);
		private final Keyword cRequiresIndexTrueKeyword_2_1_0_1_0_0 = (Keyword)cRequiresIndexAssignment_2_1_0_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_2_1_0_1_1 = (Keyword)cAlternatives_2_1_0_1.eContents().get(1);
		private final Group cGroup_2_1_1 = (Group)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cDescKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cDescAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_2_1_1_1_0 = (RuleCall)cDescAssignment_2_1_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cUnorderedGroup_2_1.eContents().get(2);
		private final Keyword cTagsKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_2_1_2_1_0 = (RuleCall)cTagsAssignment_2_1_2_1.eContents().get(0);
		private final Group cGroup_2_1_2_2 = (Group)cGroup_2_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_2_0 = (Keyword)cGroup_2_1_2_2.eContents().get(0);
		private final Assignment cTagsAssignment_2_1_2_2_1 = (Assignment)cGroup_2_1_2_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_2_1_2_2_1_0 = (RuleCall)cTagsAssignment_2_1_2_2_1.eContents().get(0);
		private final Group cGroup_2_1_3 = (Group)cUnorderedGroup_2_1.eContents().get(3);
		private final Keyword cLowerMultiplicityKeyword_2_1_3_0 = (Keyword)cGroup_2_1_3.eContents().get(0);
		private final Assignment cLowerMultiplicityAssignment_2_1_3_1 = (Assignment)cGroup_2_1_3.eContents().get(1);
		private final RuleCall cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_2_1_3_1_0 = (RuleCall)cLowerMultiplicityAssignment_2_1_3_1.eContents().get(0);
		private final Group cGroup_2_1_4 = (Group)cUnorderedGroup_2_1.eContents().get(4);
		private final Keyword cUpperMultiplicityKeyword_2_1_4_0 = (Keyword)cGroup_2_1_4.eContents().get(0);
		private final Assignment cUpperMultiplicityAssignment_2_1_4_1 = (Assignment)cGroup_2_1_4.eContents().get(1);
		private final RuleCall cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_2_1_4_1_0 = (RuleCall)cUpperMultiplicityAssignment_2_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cContainerAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cContainerContainerDefParserRuleCall_4_0 = (RuleCall)cContainerAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ChoiceContainerDef:
		//	"choice" name=ID ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags"
		//	tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")? "{" container+=ContainerDef* "}";
		public ParserRule getRule() { return rule; }

		//"choice" name=ID ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag
		//("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")? "{" container+=ContainerDef* "}"
		public Group getGroup() { return cGroup; }

		//"choice"
		public Keyword getChoiceKeyword_0() { return cChoiceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag (","
		//tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup_2() { return cGroup_2; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }

		//("requiresIndex" (requiresIndex?="true" | "false"))?
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"requiresIndex"
		public Keyword getRequiresIndexKeyword_2_1_0_0() { return cRequiresIndexKeyword_2_1_0_0; }

		//requiresIndex?="true" | "false"
		public Alternatives getAlternatives_2_1_0_1() { return cAlternatives_2_1_0_1; }

		//requiresIndex?="true"
		public Assignment getRequiresIndexAssignment_2_1_0_1_0() { return cRequiresIndexAssignment_2_1_0_1_0; }

		//"true"
		public Keyword getRequiresIndexTrueKeyword_2_1_0_1_0_0() { return cRequiresIndexTrueKeyword_2_1_0_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_2_1_0_1_1() { return cFalseKeyword_2_1_0_1_1; }

		//("desc" desc=STRING)?
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//"desc"
		public Keyword getDescKeyword_2_1_1_0() { return cDescKeyword_2_1_1_0; }

		//desc=STRING
		public Assignment getDescAssignment_2_1_1_1() { return cDescAssignment_2_1_1_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_2_1_1_1_0() { return cDescSTRINGTerminalRuleCall_2_1_1_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//"tags"
		public Keyword getTagsKeyword_2_1_2_0() { return cTagsKeyword_2_1_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_2_1_2_1() { return cTagsAssignment_2_1_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_2_1_2_1_0() { return cTagsTagParserRuleCall_2_1_2_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_2_1_2_2() { return cGroup_2_1_2_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_2_0() { return cCommaKeyword_2_1_2_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_2_1_2_2_1() { return cTagsAssignment_2_1_2_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_2_1_2_2_1_0() { return cTagsTagParserRuleCall_2_1_2_2_1_0; }

		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)?
		public Group getGroup_2_1_3() { return cGroup_2_1_3; }

		//"lowerMultiplicity"
		public Keyword getLowerMultiplicityKeyword_2_1_3_0() { return cLowerMultiplicityKeyword_2_1_3_0; }

		//lowerMultiplicity=LOWER_MULTIPLICITY
		public Assignment getLowerMultiplicityAssignment_2_1_3_1() { return cLowerMultiplicityAssignment_2_1_3_1; }

		//LOWER_MULTIPLICITY
		public RuleCall getLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_2_1_3_1_0() { return cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_2_1_3_1_0; }

		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?
		public Group getGroup_2_1_4() { return cGroup_2_1_4; }

		//"upperMultiplicity"
		public Keyword getUpperMultiplicityKeyword_2_1_4_0() { return cUpperMultiplicityKeyword_2_1_4_0; }

		//upperMultiplicity=UPPER_MULTIPLICITY
		public Assignment getUpperMultiplicityAssignment_2_1_4_1() { return cUpperMultiplicityAssignment_2_1_4_1; }

		//UPPER_MULTIPLICITY
		public RuleCall getUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_2_1_4_1_0() { return cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_2_1_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//container+=ContainerDef*
		public Assignment getContainerAssignment_4() { return cContainerAssignment_4; }

		//ContainerDef
		public RuleCall getContainerContainerDefParserRuleCall_4_0() { return cContainerContainerDefParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ParameterDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeParameterTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4_1 = (UnorderedGroup)cGroup_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cUnorderedGroup_4_1.eContents().get(0);
		private final Keyword cRequiresIndexKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1_0_1 = (Alternatives)cGroup_4_1_0.eContents().get(1);
		private final Assignment cRequiresIndexAssignment_4_1_0_1_0 = (Assignment)cAlternatives_4_1_0_1.eContents().get(0);
		private final Keyword cRequiresIndexTrueKeyword_4_1_0_1_0_0 = (Keyword)cRequiresIndexAssignment_4_1_0_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_4_1_0_1_1 = (Keyword)cAlternatives_4_1_0_1.eContents().get(1);
		private final Group cGroup_4_1_1 = (Group)cUnorderedGroup_4_1.eContents().get(1);
		private final Keyword cDefaultKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Assignment cDefaultAssignment_4_1_1_1 = (Assignment)cGroup_4_1_1.eContents().get(1);
		private final RuleCall cDefaultVALUEParserRuleCall_4_1_1_1_0 = (RuleCall)cDefaultAssignment_4_1_1_1.eContents().get(0);
		private final Group cGroup_4_1_2 = (Group)cUnorderedGroup_4_1.eContents().get(2);
		private final Keyword cLiteralsKeyword_4_1_2_0 = (Keyword)cGroup_4_1_2.eContents().get(0);
		private final Assignment cLiteralsAssignment_4_1_2_1 = (Assignment)cGroup_4_1_2.eContents().get(1);
		private final RuleCall cLiteralsIDTerminalRuleCall_4_1_2_1_0 = (RuleCall)cLiteralsAssignment_4_1_2_1.eContents().get(0);
		private final Group cGroup_4_1_3 = (Group)cUnorderedGroup_4_1.eContents().get(3);
		private final Keyword cDescKeyword_4_1_3_0 = (Keyword)cGroup_4_1_3.eContents().get(0);
		private final Assignment cDescAssignment_4_1_3_1 = (Assignment)cGroup_4_1_3.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_4_1_3_1_0 = (RuleCall)cDescAssignment_4_1_3_1.eContents().get(0);
		private final Group cGroup_4_1_4 = (Group)cUnorderedGroup_4_1.eContents().get(4);
		private final Keyword cTagsKeyword_4_1_4_0 = (Keyword)cGroup_4_1_4.eContents().get(0);
		private final Assignment cTagsAssignment_4_1_4_1 = (Assignment)cGroup_4_1_4.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_4_1_4_1_0 = (RuleCall)cTagsAssignment_4_1_4_1.eContents().get(0);
		private final Group cGroup_4_1_4_2 = (Group)cGroup_4_1_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_1_4_2_0 = (Keyword)cGroup_4_1_4_2.eContents().get(0);
		private final Assignment cTagsAssignment_4_1_4_2_1 = (Assignment)cGroup_4_1_4_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_4_1_4_2_1_0 = (RuleCall)cTagsAssignment_4_1_4_2_1.eContents().get(0);
		private final Group cGroup_4_1_5 = (Group)cUnorderedGroup_4_1.eContents().get(5);
		private final Keyword cLowerMultiplicityKeyword_4_1_5_0 = (Keyword)cGroup_4_1_5.eContents().get(0);
		private final Assignment cLowerMultiplicityAssignment_4_1_5_1 = (Assignment)cGroup_4_1_5.eContents().get(1);
		private final RuleCall cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_4_1_5_1_0 = (RuleCall)cLowerMultiplicityAssignment_4_1_5_1.eContents().get(0);
		private final Group cGroup_4_1_6 = (Group)cUnorderedGroup_4_1.eContents().get(6);
		private final Keyword cUpperMultiplicityKeyword_4_1_6_0 = (Keyword)cGroup_4_1_6.eContents().get(0);
		private final Assignment cUpperMultiplicityAssignment_4_1_6_1 = (Assignment)cGroup_4_1_6.eContents().get(1);
		private final RuleCall cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_4_1_6_1_0 = (RuleCall)cUpperMultiplicityAssignment_4_1_6_1.eContents().get(0);
		private final Group cGroup_4_1_7 = (Group)cUnorderedGroup_4_1.eContents().get(7);
		private final Keyword cMinKeyword_4_1_7_0 = (Keyword)cGroup_4_1_7.eContents().get(0);
		private final Assignment cMinAssignment_4_1_7_1 = (Assignment)cGroup_4_1_7.eContents().get(1);
		private final RuleCall cMinNUMBERParserRuleCall_4_1_7_1_0 = (RuleCall)cMinAssignment_4_1_7_1.eContents().get(0);
		private final Group cGroup_4_1_8 = (Group)cUnorderedGroup_4_1.eContents().get(8);
		private final Keyword cMaxKeyword_4_1_8_0 = (Keyword)cGroup_4_1_8.eContents().get(0);
		private final Assignment cMaxAssignment_4_1_8_1 = (Assignment)cGroup_4_1_8.eContents().get(1);
		private final RuleCall cMaxNUMBERParserRuleCall_4_1_8_1_0 = (RuleCall)cMaxAssignment_4_1_8_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ParameterDef:
		//	"param" name=ID ":" type=ParameterType ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("default"
		//	default=VALUE)? & ("literals" literals+=ID+)? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//	("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//	upperMultiplicity=UPPER_MULTIPLICITY)? & ("min" min=NUMBER)? & ("max" max=NUMBER)?) ")")?;
		public ParserRule getRule() { return rule; }

		//"param" name=ID ":" type=ParameterType ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("default"
		//default=VALUE)? & ("literals" literals+=ID+)? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)? & ("min" min=NUMBER)? & ("max" max=NUMBER)?) ")")?
		public Group getGroup() { return cGroup; }

		//"param"
		public Keyword getParamKeyword_0() { return cParamKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=ParameterType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//ParameterType
		public RuleCall getTypeParameterTypeEnumRuleCall_3_0() { return cTypeParameterTypeEnumRuleCall_3_0; }

		//("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("default" default=VALUE)? & ("literals" literals+=ID+)? &
		//("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity"
		//lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)? & ("min"
		//min=NUMBER)? & ("max" max=NUMBER)?) ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }

		//("requiresIndex" (requiresIndex?="true" | "false"))? & ("default" default=VALUE)? & ("literals" literals+=ID+)? &
		//("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity"
		//lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)? & ("min"
		//min=NUMBER)? & ("max" max=NUMBER)?
		public UnorderedGroup getUnorderedGroup_4_1() { return cUnorderedGroup_4_1; }

		//("requiresIndex" (requiresIndex?="true" | "false"))?
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//"requiresIndex"
		public Keyword getRequiresIndexKeyword_4_1_0_0() { return cRequiresIndexKeyword_4_1_0_0; }

		//requiresIndex?="true" | "false"
		public Alternatives getAlternatives_4_1_0_1() { return cAlternatives_4_1_0_1; }

		//requiresIndex?="true"
		public Assignment getRequiresIndexAssignment_4_1_0_1_0() { return cRequiresIndexAssignment_4_1_0_1_0; }

		//"true"
		public Keyword getRequiresIndexTrueKeyword_4_1_0_1_0_0() { return cRequiresIndexTrueKeyword_4_1_0_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_4_1_0_1_1() { return cFalseKeyword_4_1_0_1_1; }

		//("default" default=VALUE)?
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }

		//"default"
		public Keyword getDefaultKeyword_4_1_1_0() { return cDefaultKeyword_4_1_1_0; }

		//default=VALUE
		public Assignment getDefaultAssignment_4_1_1_1() { return cDefaultAssignment_4_1_1_1; }

		//VALUE
		public RuleCall getDefaultVALUEParserRuleCall_4_1_1_1_0() { return cDefaultVALUEParserRuleCall_4_1_1_1_0; }

		//("literals" literals+=ID+)?
		public Group getGroup_4_1_2() { return cGroup_4_1_2; }

		//"literals"
		public Keyword getLiteralsKeyword_4_1_2_0() { return cLiteralsKeyword_4_1_2_0; }

		//literals+=ID+
		public Assignment getLiteralsAssignment_4_1_2_1() { return cLiteralsAssignment_4_1_2_1; }

		//ID
		public RuleCall getLiteralsIDTerminalRuleCall_4_1_2_1_0() { return cLiteralsIDTerminalRuleCall_4_1_2_1_0; }

		//("desc" desc=STRING)?
		public Group getGroup_4_1_3() { return cGroup_4_1_3; }

		//"desc"
		public Keyword getDescKeyword_4_1_3_0() { return cDescKeyword_4_1_3_0; }

		//desc=STRING
		public Assignment getDescAssignment_4_1_3_1() { return cDescAssignment_4_1_3_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_4_1_3_1_0() { return cDescSTRINGTerminalRuleCall_4_1_3_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_4_1_4() { return cGroup_4_1_4; }

		//"tags"
		public Keyword getTagsKeyword_4_1_4_0() { return cTagsKeyword_4_1_4_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_4_1_4_1() { return cTagsAssignment_4_1_4_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_4_1_4_1_0() { return cTagsTagParserRuleCall_4_1_4_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_4_1_4_2() { return cGroup_4_1_4_2; }

		//","
		public Keyword getCommaKeyword_4_1_4_2_0() { return cCommaKeyword_4_1_4_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_4_1_4_2_1() { return cTagsAssignment_4_1_4_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_4_1_4_2_1_0() { return cTagsTagParserRuleCall_4_1_4_2_1_0; }

		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)?
		public Group getGroup_4_1_5() { return cGroup_4_1_5; }

		//"lowerMultiplicity"
		public Keyword getLowerMultiplicityKeyword_4_1_5_0() { return cLowerMultiplicityKeyword_4_1_5_0; }

		//lowerMultiplicity=LOWER_MULTIPLICITY
		public Assignment getLowerMultiplicityAssignment_4_1_5_1() { return cLowerMultiplicityAssignment_4_1_5_1; }

		//LOWER_MULTIPLICITY
		public RuleCall getLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_4_1_5_1_0() { return cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_4_1_5_1_0; }

		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?
		public Group getGroup_4_1_6() { return cGroup_4_1_6; }

		//"upperMultiplicity"
		public Keyword getUpperMultiplicityKeyword_4_1_6_0() { return cUpperMultiplicityKeyword_4_1_6_0; }

		//upperMultiplicity=UPPER_MULTIPLICITY
		public Assignment getUpperMultiplicityAssignment_4_1_6_1() { return cUpperMultiplicityAssignment_4_1_6_1; }

		//UPPER_MULTIPLICITY
		public RuleCall getUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_4_1_6_1_0() { return cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_4_1_6_1_0; }

		//("min" min=NUMBER)?
		public Group getGroup_4_1_7() { return cGroup_4_1_7; }

		//"min"
		public Keyword getMinKeyword_4_1_7_0() { return cMinKeyword_4_1_7_0; }

		//min=NUMBER
		public Assignment getMinAssignment_4_1_7_1() { return cMinAssignment_4_1_7_1; }

		//NUMBER
		public RuleCall getMinNUMBERParserRuleCall_4_1_7_1_0() { return cMinNUMBERParserRuleCall_4_1_7_1_0; }

		//("max" max=NUMBER)?
		public Group getGroup_4_1_8() { return cGroup_4_1_8; }

		//"max"
		public Keyword getMaxKeyword_4_1_8_0() { return cMaxKeyword_4_1_8_0; }

		//max=NUMBER
		public Assignment getMaxAssignment_4_1_8_1() { return cMaxAssignment_4_1_8_1; }

		//NUMBER
		public RuleCall getMaxNUMBERParserRuleCall_4_1_8_1_0() { return cMaxNUMBERParserRuleCall_4_1_8_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}

	public class AbstractReferenceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractReferenceDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cReferenceDefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInstanceReferenceDefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cForeignReferenceDefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//AbstractReferenceDef:
		//	ReferenceDef | InstanceReferenceDef | ForeignReferenceDef;
		public ParserRule getRule() { return rule; }

		//ReferenceDef | InstanceReferenceDef | ForeignReferenceDef
		public Alternatives getAlternatives() { return cAlternatives; }

		//ReferenceDef
		public RuleCall getReferenceDefParserRuleCall_0() { return cReferenceDefParserRuleCall_0; }

		//InstanceReferenceDef
		public RuleCall getInstanceReferenceDefParserRuleCall_1() { return cInstanceReferenceDefParserRuleCall_1; }

		//ForeignReferenceDef
		public RuleCall getForeignReferenceDefParserRuleCall_2() { return cForeignReferenceDefParserRuleCall_2; }
	}

	public class ReferenceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypesContainerDefCrossReference_3_0 = (CrossReference)cTypesAssignment_3.eContents().get(0);
		private final RuleCall cTypesContainerDefFQNParserRuleCall_3_0_1 = (RuleCall)cTypesContainerDefCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cTypesContainerDefCrossReference_4_1_0 = (CrossReference)cTypesAssignment_4_1.eContents().get(0);
		private final RuleCall cTypesContainerDefFQNParserRuleCall_4_1_0_1 = (RuleCall)cTypesContainerDefCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_5_1 = (UnorderedGroup)cGroup_5.eContents().get(1);
		private final Group cGroup_5_1_0 = (Group)cUnorderedGroup_5_1.eContents().get(0);
		private final Keyword cRequiresIndexKeyword_5_1_0_0 = (Keyword)cGroup_5_1_0.eContents().get(0);
		private final Alternatives cAlternatives_5_1_0_1 = (Alternatives)cGroup_5_1_0.eContents().get(1);
		private final Assignment cRequiresIndexAssignment_5_1_0_1_0 = (Assignment)cAlternatives_5_1_0_1.eContents().get(0);
		private final Keyword cRequiresIndexTrueKeyword_5_1_0_1_0_0 = (Keyword)cRequiresIndexAssignment_5_1_0_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_5_1_0_1_1 = (Keyword)cAlternatives_5_1_0_1.eContents().get(1);
		private final Group cGroup_5_1_1 = (Group)cUnorderedGroup_5_1.eContents().get(1);
		private final Keyword cDescKeyword_5_1_1_0 = (Keyword)cGroup_5_1_1.eContents().get(0);
		private final Assignment cDescAssignment_5_1_1_1 = (Assignment)cGroup_5_1_1.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_5_1_1_1_0 = (RuleCall)cDescAssignment_5_1_1_1.eContents().get(0);
		private final Group cGroup_5_1_2 = (Group)cUnorderedGroup_5_1.eContents().get(2);
		private final Keyword cTagsKeyword_5_1_2_0 = (Keyword)cGroup_5_1_2.eContents().get(0);
		private final Assignment cTagsAssignment_5_1_2_1 = (Assignment)cGroup_5_1_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_2_1_0 = (RuleCall)cTagsAssignment_5_1_2_1.eContents().get(0);
		private final Group cGroup_5_1_2_2 = (Group)cGroup_5_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_5_1_2_2_0 = (Keyword)cGroup_5_1_2_2.eContents().get(0);
		private final Assignment cTagsAssignment_5_1_2_2_1 = (Assignment)cGroup_5_1_2_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_2_2_1_0 = (RuleCall)cTagsAssignment_5_1_2_2_1.eContents().get(0);
		private final Group cGroup_5_1_3 = (Group)cUnorderedGroup_5_1.eContents().get(3);
		private final Keyword cLowerMultiplicityKeyword_5_1_3_0 = (Keyword)cGroup_5_1_3.eContents().get(0);
		private final Assignment cLowerMultiplicityAssignment_5_1_3_1 = (Assignment)cGroup_5_1_3.eContents().get(1);
		private final RuleCall cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_5_1_3_1_0 = (RuleCall)cLowerMultiplicityAssignment_5_1_3_1.eContents().get(0);
		private final Group cGroup_5_1_4 = (Group)cUnorderedGroup_5_1.eContents().get(4);
		private final Keyword cUpperMultiplicityKeyword_5_1_4_0 = (Keyword)cGroup_5_1_4.eContents().get(0);
		private final Assignment cUpperMultiplicityAssignment_5_1_4_1 = (Assignment)cGroup_5_1_4.eContents().get(1);
		private final RuleCall cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_5_1_4_1_0 = (RuleCall)cUpperMultiplicityAssignment_5_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		
		//ReferenceDef:
		//	"ref" name=ID ":" types+=[ContainerDef|FQN] ("," types+=[ContainerDef|FQN])* ("(" (("requiresIndex"
		//	(requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//	("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?;
		public ParserRule getRule() { return rule; }

		//"ref" name=ID ":" types+=[ContainerDef|FQN] ("," types+=[ContainerDef|FQN])* ("(" (("requiresIndex"
		//(requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup() { return cGroup; }

		//"ref"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//types+=[ContainerDef|FQN]
		public Assignment getTypesAssignment_3() { return cTypesAssignment_3; }

		//[ContainerDef|FQN]
		public CrossReference getTypesContainerDefCrossReference_3_0() { return cTypesContainerDefCrossReference_3_0; }

		//FQN
		public RuleCall getTypesContainerDefFQNParserRuleCall_3_0_1() { return cTypesContainerDefFQNParserRuleCall_3_0_1; }

		//("," types+=[ContainerDef|FQN])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//types+=[ContainerDef|FQN]
		public Assignment getTypesAssignment_4_1() { return cTypesAssignment_4_1; }

		//[ContainerDef|FQN]
		public CrossReference getTypesContainerDefCrossReference_4_1_0() { return cTypesContainerDefCrossReference_4_1_0; }

		//FQN
		public RuleCall getTypesContainerDefFQNParserRuleCall_4_1_0_1() { return cTypesContainerDefFQNParserRuleCall_4_1_0_1; }

		//("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag (","
		//tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup_5() { return cGroup_5; }

		//"("
		public Keyword getLeftParenthesisKeyword_5_0() { return cLeftParenthesisKeyword_5_0; }

		//("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?
		public UnorderedGroup getUnorderedGroup_5_1() { return cUnorderedGroup_5_1; }

		//("requiresIndex" (requiresIndex?="true" | "false"))?
		public Group getGroup_5_1_0() { return cGroup_5_1_0; }

		//"requiresIndex"
		public Keyword getRequiresIndexKeyword_5_1_0_0() { return cRequiresIndexKeyword_5_1_0_0; }

		//requiresIndex?="true" | "false"
		public Alternatives getAlternatives_5_1_0_1() { return cAlternatives_5_1_0_1; }

		//requiresIndex?="true"
		public Assignment getRequiresIndexAssignment_5_1_0_1_0() { return cRequiresIndexAssignment_5_1_0_1_0; }

		//"true"
		public Keyword getRequiresIndexTrueKeyword_5_1_0_1_0_0() { return cRequiresIndexTrueKeyword_5_1_0_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_5_1_0_1_1() { return cFalseKeyword_5_1_0_1_1; }

		//("desc" desc=STRING)?
		public Group getGroup_5_1_1() { return cGroup_5_1_1; }

		//"desc"
		public Keyword getDescKeyword_5_1_1_0() { return cDescKeyword_5_1_1_0; }

		//desc=STRING
		public Assignment getDescAssignment_5_1_1_1() { return cDescAssignment_5_1_1_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_5_1_1_1_0() { return cDescSTRINGTerminalRuleCall_5_1_1_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_5_1_2() { return cGroup_5_1_2; }

		//"tags"
		public Keyword getTagsKeyword_5_1_2_0() { return cTagsKeyword_5_1_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_5_1_2_1() { return cTagsAssignment_5_1_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_2_1_0() { return cTagsTagParserRuleCall_5_1_2_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_5_1_2_2() { return cGroup_5_1_2_2; }

		//","
		public Keyword getCommaKeyword_5_1_2_2_0() { return cCommaKeyword_5_1_2_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_5_1_2_2_1() { return cTagsAssignment_5_1_2_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_2_2_1_0() { return cTagsTagParserRuleCall_5_1_2_2_1_0; }

		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)?
		public Group getGroup_5_1_3() { return cGroup_5_1_3; }

		//"lowerMultiplicity"
		public Keyword getLowerMultiplicityKeyword_5_1_3_0() { return cLowerMultiplicityKeyword_5_1_3_0; }

		//lowerMultiplicity=LOWER_MULTIPLICITY
		public Assignment getLowerMultiplicityAssignment_5_1_3_1() { return cLowerMultiplicityAssignment_5_1_3_1; }

		//LOWER_MULTIPLICITY
		public RuleCall getLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_5_1_3_1_0() { return cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_5_1_3_1_0; }

		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?
		public Group getGroup_5_1_4() { return cGroup_5_1_4; }

		//"upperMultiplicity"
		public Keyword getUpperMultiplicityKeyword_5_1_4_0() { return cUpperMultiplicityKeyword_5_1_4_0; }

		//upperMultiplicity=UPPER_MULTIPLICITY
		public Assignment getUpperMultiplicityAssignment_5_1_4_1() { return cUpperMultiplicityAssignment_5_1_4_1; }

		//UPPER_MULTIPLICITY
		public RuleCall getUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_5_1_4_1_0() { return cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_5_1_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5_2() { return cRightParenthesisKeyword_5_2; }
	}

	public class InstanceReferenceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstanceReferenceDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIrefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cContextsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cContextsEClassRefStarParserRuleCall_3_0_0 = (RuleCall)cContextsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cContextsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cContextsEClassRefStarParserRuleCall_3_1_1_0 = (RuleCall)cContextsAssignment_3_1_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDestAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDestEClassRefParserRuleCall_5_0 = (RuleCall)cDestAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_6_1 = (UnorderedGroup)cGroup_6.eContents().get(1);
		private final Group cGroup_6_1_0 = (Group)cUnorderedGroup_6_1.eContents().get(0);
		private final Keyword cRequiresIndexKeyword_6_1_0_0 = (Keyword)cGroup_6_1_0.eContents().get(0);
		private final Alternatives cAlternatives_6_1_0_1 = (Alternatives)cGroup_6_1_0.eContents().get(1);
		private final Assignment cRequiresIndexAssignment_6_1_0_1_0 = (Assignment)cAlternatives_6_1_0_1.eContents().get(0);
		private final Keyword cRequiresIndexTrueKeyword_6_1_0_1_0_0 = (Keyword)cRequiresIndexAssignment_6_1_0_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_6_1_0_1_1 = (Keyword)cAlternatives_6_1_0_1.eContents().get(1);
		private final Group cGroup_6_1_1 = (Group)cUnorderedGroup_6_1.eContents().get(1);
		private final Keyword cDescKeyword_6_1_1_0 = (Keyword)cGroup_6_1_1.eContents().get(0);
		private final Assignment cDescAssignment_6_1_1_1 = (Assignment)cGroup_6_1_1.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_6_1_1_1_0 = (RuleCall)cDescAssignment_6_1_1_1.eContents().get(0);
		private final Group cGroup_6_1_2 = (Group)cUnorderedGroup_6_1.eContents().get(2);
		private final Keyword cTagsKeyword_6_1_2_0 = (Keyword)cGroup_6_1_2.eContents().get(0);
		private final Assignment cTagsAssignment_6_1_2_1 = (Assignment)cGroup_6_1_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_6_1_2_1_0 = (RuleCall)cTagsAssignment_6_1_2_1.eContents().get(0);
		private final Group cGroup_6_1_2_2 = (Group)cGroup_6_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_6_1_2_2_0 = (Keyword)cGroup_6_1_2_2.eContents().get(0);
		private final Assignment cTagsAssignment_6_1_2_2_1 = (Assignment)cGroup_6_1_2_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_6_1_2_2_1_0 = (RuleCall)cTagsAssignment_6_1_2_2_1.eContents().get(0);
		private final Group cGroup_6_1_3 = (Group)cUnorderedGroup_6_1.eContents().get(3);
		private final Keyword cLowerMultiplicityKeyword_6_1_3_0 = (Keyword)cGroup_6_1_3.eContents().get(0);
		private final Assignment cLowerMultiplicityAssignment_6_1_3_1 = (Assignment)cGroup_6_1_3.eContents().get(1);
		private final RuleCall cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_6_1_3_1_0 = (RuleCall)cLowerMultiplicityAssignment_6_1_3_1.eContents().get(0);
		private final Group cGroup_6_1_4 = (Group)cUnorderedGroup_6_1.eContents().get(4);
		private final Keyword cUpperMultiplicityKeyword_6_1_4_0 = (Keyword)cGroup_6_1_4.eContents().get(0);
		private final Assignment cUpperMultiplicityAssignment_6_1_4_1 = (Assignment)cGroup_6_1_4.eContents().get(1);
		private final RuleCall cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_6_1_4_1_0 = (RuleCall)cUpperMultiplicityAssignment_6_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//InstanceReferenceDef:
		//	"iref" name=ID ":" (contexts+=EClassRefStar ("," contexts+=EClassRefStar)*)? "->" dest=EClassRef ("("
		//	(("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?
		//	& ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?;
		public ParserRule getRule() { return rule; }

		//"iref" name=ID ":" (contexts+=EClassRefStar ("," contexts+=EClassRefStar)*)? "->" dest=EClassRef ("(" (("requiresIndex"
		//(requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup() { return cGroup; }

		//"iref"
		public Keyword getIrefKeyword_0() { return cIrefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//(contexts+=EClassRefStar ("," contexts+=EClassRefStar)*)?
		public Group getGroup_3() { return cGroup_3; }

		//contexts+=EClassRefStar
		public Assignment getContextsAssignment_3_0() { return cContextsAssignment_3_0; }

		//EClassRefStar
		public RuleCall getContextsEClassRefStarParserRuleCall_3_0_0() { return cContextsEClassRefStarParserRuleCall_3_0_0; }

		//("," contexts+=EClassRefStar)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//contexts+=EClassRefStar
		public Assignment getContextsAssignment_3_1_1() { return cContextsAssignment_3_1_1; }

		//EClassRefStar
		public RuleCall getContextsEClassRefStarParserRuleCall_3_1_1_0() { return cContextsEClassRefStarParserRuleCall_3_1_1_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//dest=EClassRef
		public Assignment getDestAssignment_5() { return cDestAssignment_5; }

		//EClassRef
		public RuleCall getDestEClassRefParserRuleCall_5_0() { return cDestEClassRefParserRuleCall_5_0; }

		//("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag (","
		//tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup_6() { return cGroup_6; }

		//"("
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }

		//("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?
		public UnorderedGroup getUnorderedGroup_6_1() { return cUnorderedGroup_6_1; }

		//("requiresIndex" (requiresIndex?="true" | "false"))?
		public Group getGroup_6_1_0() { return cGroup_6_1_0; }

		//"requiresIndex"
		public Keyword getRequiresIndexKeyword_6_1_0_0() { return cRequiresIndexKeyword_6_1_0_0; }

		//requiresIndex?="true" | "false"
		public Alternatives getAlternatives_6_1_0_1() { return cAlternatives_6_1_0_1; }

		//requiresIndex?="true"
		public Assignment getRequiresIndexAssignment_6_1_0_1_0() { return cRequiresIndexAssignment_6_1_0_1_0; }

		//"true"
		public Keyword getRequiresIndexTrueKeyword_6_1_0_1_0_0() { return cRequiresIndexTrueKeyword_6_1_0_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_6_1_0_1_1() { return cFalseKeyword_6_1_0_1_1; }

		//("desc" desc=STRING)?
		public Group getGroup_6_1_1() { return cGroup_6_1_1; }

		//"desc"
		public Keyword getDescKeyword_6_1_1_0() { return cDescKeyword_6_1_1_0; }

		//desc=STRING
		public Assignment getDescAssignment_6_1_1_1() { return cDescAssignment_6_1_1_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_6_1_1_1_0() { return cDescSTRINGTerminalRuleCall_6_1_1_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_6_1_2() { return cGroup_6_1_2; }

		//"tags"
		public Keyword getTagsKeyword_6_1_2_0() { return cTagsKeyword_6_1_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_6_1_2_1() { return cTagsAssignment_6_1_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_6_1_2_1_0() { return cTagsTagParserRuleCall_6_1_2_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_6_1_2_2() { return cGroup_6_1_2_2; }

		//","
		public Keyword getCommaKeyword_6_1_2_2_0() { return cCommaKeyword_6_1_2_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_6_1_2_2_1() { return cTagsAssignment_6_1_2_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_6_1_2_2_1_0() { return cTagsTagParserRuleCall_6_1_2_2_1_0; }

		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)?
		public Group getGroup_6_1_3() { return cGroup_6_1_3; }

		//"lowerMultiplicity"
		public Keyword getLowerMultiplicityKeyword_6_1_3_0() { return cLowerMultiplicityKeyword_6_1_3_0; }

		//lowerMultiplicity=LOWER_MULTIPLICITY
		public Assignment getLowerMultiplicityAssignment_6_1_3_1() { return cLowerMultiplicityAssignment_6_1_3_1; }

		//LOWER_MULTIPLICITY
		public RuleCall getLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_6_1_3_1_0() { return cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_6_1_3_1_0; }

		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?
		public Group getGroup_6_1_4() { return cGroup_6_1_4; }

		//"upperMultiplicity"
		public Keyword getUpperMultiplicityKeyword_6_1_4_0() { return cUpperMultiplicityKeyword_6_1_4_0; }

		//upperMultiplicity=UPPER_MULTIPLICITY
		public Assignment getUpperMultiplicityAssignment_6_1_4_1() { return cUpperMultiplicityAssignment_6_1_4_1; }

		//UPPER_MULTIPLICITY
		public RuleCall getUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_6_1_4_1_0() { return cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_6_1_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }
	}

	public class ForeignReferenceDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ForeignReferenceDef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFrefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDestAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDestEClassRefParserRuleCall_3_0 = (RuleCall)cDestAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_4_1 = (UnorderedGroup)cGroup_4.eContents().get(1);
		private final Group cGroup_4_1_0 = (Group)cUnorderedGroup_4_1.eContents().get(0);
		private final Keyword cRequiresIndexKeyword_4_1_0_0 = (Keyword)cGroup_4_1_0.eContents().get(0);
		private final Alternatives cAlternatives_4_1_0_1 = (Alternatives)cGroup_4_1_0.eContents().get(1);
		private final Assignment cRequiresIndexAssignment_4_1_0_1_0 = (Assignment)cAlternatives_4_1_0_1.eContents().get(0);
		private final Keyword cRequiresIndexTrueKeyword_4_1_0_1_0_0 = (Keyword)cRequiresIndexAssignment_4_1_0_1_0.eContents().get(0);
		private final Keyword cFalseKeyword_4_1_0_1_1 = (Keyword)cAlternatives_4_1_0_1.eContents().get(1);
		private final Group cGroup_4_1_1 = (Group)cUnorderedGroup_4_1.eContents().get(1);
		private final Keyword cDescKeyword_4_1_1_0 = (Keyword)cGroup_4_1_1.eContents().get(0);
		private final Assignment cDescAssignment_4_1_1_1 = (Assignment)cGroup_4_1_1.eContents().get(1);
		private final RuleCall cDescSTRINGTerminalRuleCall_4_1_1_1_0 = (RuleCall)cDescAssignment_4_1_1_1.eContents().get(0);
		private final Group cGroup_4_1_2 = (Group)cUnorderedGroup_4_1.eContents().get(2);
		private final Keyword cTagsKeyword_4_1_2_0 = (Keyword)cGroup_4_1_2.eContents().get(0);
		private final Assignment cTagsAssignment_4_1_2_1 = (Assignment)cGroup_4_1_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_4_1_2_1_0 = (RuleCall)cTagsAssignment_4_1_2_1.eContents().get(0);
		private final Group cGroup_4_1_2_2 = (Group)cGroup_4_1_2.eContents().get(2);
		private final Keyword cCommaKeyword_4_1_2_2_0 = (Keyword)cGroup_4_1_2_2.eContents().get(0);
		private final Assignment cTagsAssignment_4_1_2_2_1 = (Assignment)cGroup_4_1_2_2.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_4_1_2_2_1_0 = (RuleCall)cTagsAssignment_4_1_2_2_1.eContents().get(0);
		private final Group cGroup_4_1_3 = (Group)cUnorderedGroup_4_1.eContents().get(3);
		private final Keyword cLowerMultiplicityKeyword_4_1_3_0 = (Keyword)cGroup_4_1_3.eContents().get(0);
		private final Assignment cLowerMultiplicityAssignment_4_1_3_1 = (Assignment)cGroup_4_1_3.eContents().get(1);
		private final RuleCall cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_4_1_3_1_0 = (RuleCall)cLowerMultiplicityAssignment_4_1_3_1.eContents().get(0);
		private final Group cGroup_4_1_4 = (Group)cUnorderedGroup_4_1.eContents().get(4);
		private final Keyword cUpperMultiplicityKeyword_4_1_4_0 = (Keyword)cGroup_4_1_4.eContents().get(0);
		private final Assignment cUpperMultiplicityAssignment_4_1_4_1 = (Assignment)cGroup_4_1_4.eContents().get(1);
		private final RuleCall cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_4_1_4_1_0 = (RuleCall)cUpperMultiplicityAssignment_4_1_4_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ForeignReferenceDef:
		//	"fref" name=ID ":" dest=EClassRef ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)?
		//	& ("tags" tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? &
		//	("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?;
		public ParserRule getRule() { return rule; }

		//"fref" name=ID ":" dest=EClassRef ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? &
		//("tags" tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? &
		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup() { return cGroup; }

		//"fref"
		public Keyword getFrefKeyword_0() { return cFrefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//dest=EClassRef
		public Assignment getDestAssignment_3() { return cDestAssignment_3; }

		//EClassRef
		public RuleCall getDestEClassRefParserRuleCall_3_0() { return cDestEClassRefParserRuleCall_3_0; }

		//("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag (","
		//tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }

		//("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
		//upperMultiplicity=UPPER_MULTIPLICITY)?
		public UnorderedGroup getUnorderedGroup_4_1() { return cUnorderedGroup_4_1; }

		//("requiresIndex" (requiresIndex?="true" | "false"))?
		public Group getGroup_4_1_0() { return cGroup_4_1_0; }

		//"requiresIndex"
		public Keyword getRequiresIndexKeyword_4_1_0_0() { return cRequiresIndexKeyword_4_1_0_0; }

		//requiresIndex?="true" | "false"
		public Alternatives getAlternatives_4_1_0_1() { return cAlternatives_4_1_0_1; }

		//requiresIndex?="true"
		public Assignment getRequiresIndexAssignment_4_1_0_1_0() { return cRequiresIndexAssignment_4_1_0_1_0; }

		//"true"
		public Keyword getRequiresIndexTrueKeyword_4_1_0_1_0_0() { return cRequiresIndexTrueKeyword_4_1_0_1_0_0; }

		//"false"
		public Keyword getFalseKeyword_4_1_0_1_1() { return cFalseKeyword_4_1_0_1_1; }

		//("desc" desc=STRING)?
		public Group getGroup_4_1_1() { return cGroup_4_1_1; }

		//"desc"
		public Keyword getDescKeyword_4_1_1_0() { return cDescKeyword_4_1_1_0; }

		//desc=STRING
		public Assignment getDescAssignment_4_1_1_1() { return cDescAssignment_4_1_1_1; }

		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_4_1_1_1_0() { return cDescSTRINGTerminalRuleCall_4_1_1_1_0; }

		//("tags" tags+=Tag ("," tags+=Tag)*)?
		public Group getGroup_4_1_2() { return cGroup_4_1_2; }

		//"tags"
		public Keyword getTagsKeyword_4_1_2_0() { return cTagsKeyword_4_1_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_4_1_2_1() { return cTagsAssignment_4_1_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_4_1_2_1_0() { return cTagsTagParserRuleCall_4_1_2_1_0; }

		//("," tags+=Tag)*
		public Group getGroup_4_1_2_2() { return cGroup_4_1_2_2; }

		//","
		public Keyword getCommaKeyword_4_1_2_2_0() { return cCommaKeyword_4_1_2_2_0; }

		//tags+=Tag
		public Assignment getTagsAssignment_4_1_2_2_1() { return cTagsAssignment_4_1_2_2_1; }

		//Tag
		public RuleCall getTagsTagParserRuleCall_4_1_2_2_1_0() { return cTagsTagParserRuleCall_4_1_2_2_1_0; }

		//("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)?
		public Group getGroup_4_1_3() { return cGroup_4_1_3; }

		//"lowerMultiplicity"
		public Keyword getLowerMultiplicityKeyword_4_1_3_0() { return cLowerMultiplicityKeyword_4_1_3_0; }

		//lowerMultiplicity=LOWER_MULTIPLICITY
		public Assignment getLowerMultiplicityAssignment_4_1_3_1() { return cLowerMultiplicityAssignment_4_1_3_1; }

		//LOWER_MULTIPLICITY
		public RuleCall getLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_4_1_3_1_0() { return cLowerMultiplicityLOWER_MULTIPLICITYParserRuleCall_4_1_3_1_0; }

		//("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?
		public Group getGroup_4_1_4() { return cGroup_4_1_4; }

		//"upperMultiplicity"
		public Keyword getUpperMultiplicityKeyword_4_1_4_0() { return cUpperMultiplicityKeyword_4_1_4_0; }

		//upperMultiplicity=UPPER_MULTIPLICITY
		public Assignment getUpperMultiplicityAssignment_4_1_4_1() { return cUpperMultiplicityAssignment_4_1_4_1; }

		//UPPER_MULTIPLICITY
		public RuleCall getUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_4_1_4_1_0() { return cUpperMultiplicityUPPER_MULTIPLICITYParserRuleCall_4_1_4_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}

	public class EClassRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassRef");
		private final Assignment cTargetAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTargetEClassCrossReference_0 = (CrossReference)cTargetAssignment.eContents().get(0);
		private final RuleCall cTargetEClassXML_NAMEParserRuleCall_0_1 = (RuleCall)cTargetEClassCrossReference_0.eContents().get(1);
		
		//EClassRef:
		//	target=[ecore::EClass|XML_NAME];
		public ParserRule getRule() { return rule; }

		//target=[ecore::EClass|XML_NAME]
		public Assignment getTargetAssignment() { return cTargetAssignment; }

		//[ecore::EClass|XML_NAME]
		public CrossReference getTargetEClassCrossReference_0() { return cTargetEClassCrossReference_0; }

		//XML_NAME
		public RuleCall getTargetEClassXML_NAMEParserRuleCall_0_1() { return cTargetEClassXML_NAMEParserRuleCall_0_1; }
	}

	public class EClassRefStarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EClassRefStar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTargetAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTargetEClassCrossReference_0_0 = (CrossReference)cTargetAssignment_0.eContents().get(0);
		private final RuleCall cTargetEClassXML_NAMEParserRuleCall_0_0_1 = (RuleCall)cTargetEClassCrossReference_0_0.eContents().get(1);
		private final Assignment cStarAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cStarAsteriskKeyword_1_0 = (Keyword)cStarAssignment_1.eContents().get(0);
		
		//EClassRefStar:
		//	target=[ecore::EClass|XML_NAME] star="*"?;
		public ParserRule getRule() { return rule; }

		//target=[ecore::EClass|XML_NAME] star="*"?
		public Group getGroup() { return cGroup; }

		//target=[ecore::EClass|XML_NAME]
		public Assignment getTargetAssignment_0() { return cTargetAssignment_0; }

		//[ecore::EClass|XML_NAME]
		public CrossReference getTargetEClassCrossReference_0_0() { return cTargetEClassCrossReference_0_0; }

		//XML_NAME
		public RuleCall getTargetEClassXML_NAMEParserRuleCall_0_0_1() { return cTargetEClassXML_NAMEParserRuleCall_0_0_1; }

		//star="*"?
		public Assignment getStarAssignment_1() { return cStarAssignment_1; }

		//"*"
		public Keyword getStarAsteriskKeyword_1_0() { return cStarAsteriskKeyword_1_0; }
	}

	public class TagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Tag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyKEYParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueVALUEParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Tag:
		//	key=KEY "->" value=VALUE;
		public ParserRule getRule() { return rule; }

		//key=KEY "->" value=VALUE
		public Group getGroup() { return cGroup; }

		//key=KEY
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//KEY
		public RuleCall getKeyKEYParserRuleCall_0_0() { return cKeyKEYParserRuleCall_0_0; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_1() { return cHyphenMinusGreaterThanSignKeyword_1; }

		//value=VALUE
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//VALUE
		public RuleCall getValueVALUEParserRuleCall_2_0() { return cValueVALUEParserRuleCall_2_0; }
	}

	public class XML_NAMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XML_NAME");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//XML_NAME:
		//	ID ("-" ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("-" ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("-" ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_1_0() { return cHyphenMinusKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class VALUEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VALUE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNUMBERParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Keyword cTrueKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFalseKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//VALUE:
		//	STRING | ID | NUMBER | "true" | "false";
		public ParserRule getRule() { return rule; }

		//STRING | ID | NUMBER | "true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2() { return cNUMBERParserRuleCall_2; }

		//"true"
		public Keyword getTrueKeyword_3() { return cTrueKeyword_3; }

		//"false"
		public Keyword getFalseKeyword_4() { return cFalseKeyword_4; }
	}

	public class KEYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KEY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNUMBERParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Keyword cTrueKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFalseKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//KEY:
		//	STRING | ID | NUMBER | "true" | "false";
		public ParserRule getRule() { return rule; }

		//STRING | ID | NUMBER | "true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_2() { return cNUMBERParserRuleCall_2; }

		//"true"
		public Keyword getTrueKeyword_3() { return cTrueKeyword_3; }

		//"false"
		public Keyword getFalseKeyword_4() { return cFalseKeyword_4; }
	}

	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//NUMBER:
		//	INT ("." INT)?;
		public ParserRule getRule() { return rule; }

		//INT ("." INT)?
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//("." INT)?
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }
	}

	public class LOWER_MULTIPLICITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LOWER_MULTIPLICITY");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//LOWER_MULTIPLICITY:
		//	INT;
		public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class UPPER_MULTIPLICITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UPPER_MULTIPLICITY");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Keyword cAsteriskKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//UPPER_MULTIPLICITY:
		//	INT | "*";
		public ParserRule getRule() { return rule; }

		//INT | "*"
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"*"
		public Keyword getAsteriskKeyword_1() { return cAsteriskKeyword_1; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cSolidusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("/" ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("/" ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("/" ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"/"
		public Keyword getSolidusKeyword_1_0() { return cSolidusKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class ParameterTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ParameterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cADD_INFOEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cADD_INFOADD_INFOKeyword_0_0 = (Keyword)cADD_INFOEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBOOLEANBOOLEANKeyword_1_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cENUMEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cENUMENUMKeyword_2_0 = (Keyword)cENUMEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFLOATFLOATKeyword_3_0 = (Keyword)cFLOATEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cINTEGEREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cINTEGERINTEGERKeyword_4_0 = (Keyword)cINTEGEREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cFUNCTION_NAMEEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cFUNCTION_NAMEFUNCTION_NAMEKeyword_5_0 = (Keyword)cFUNCTION_NAMEEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLINKER_SYMBOLEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLINKER_SYMBOLLINKER_SYMBOLKeyword_6_0 = (Keyword)cLINKER_SYMBOLEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cMULTILINE_STRINGEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cMULTILINE_STRINGMULTILINE_STRINGKeyword_7_0 = (Keyword)cMULTILINE_STRINGEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cSTRINGSTRINGKeyword_8_0 = (Keyword)cSTRINGEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum ParameterType:
		//	ADD_INFO | BOOLEAN | ENUM | FLOAT | INTEGER | FUNCTION_NAME | LINKER_SYMBOL | MULTILINE_STRING | STRING;
		public EnumRule getRule() { return rule; }

		//ADD_INFO | BOOLEAN | ENUM | FLOAT | INTEGER | FUNCTION_NAME | LINKER_SYMBOL | MULTILINE_STRING | STRING
		public Alternatives getAlternatives() { return cAlternatives; }

		//ADD_INFO
		public EnumLiteralDeclaration getADD_INFOEnumLiteralDeclaration_0() { return cADD_INFOEnumLiteralDeclaration_0; }

		//"ADD_INFO"
		public Keyword getADD_INFOADD_INFOKeyword_0_0() { return cADD_INFOADD_INFOKeyword_0_0; }

		//BOOLEAN
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_1() { return cBOOLEANEnumLiteralDeclaration_1; }

		//"BOOLEAN"
		public Keyword getBOOLEANBOOLEANKeyword_1_0() { return cBOOLEANBOOLEANKeyword_1_0; }

		//ENUM
		public EnumLiteralDeclaration getENUMEnumLiteralDeclaration_2() { return cENUMEnumLiteralDeclaration_2; }

		//"ENUM"
		public Keyword getENUMENUMKeyword_2_0() { return cENUMENUMKeyword_2_0; }

		//FLOAT
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_3() { return cFLOATEnumLiteralDeclaration_3; }

		//"FLOAT"
		public Keyword getFLOATFLOATKeyword_3_0() { return cFLOATFLOATKeyword_3_0; }

		//INTEGER
		public EnumLiteralDeclaration getINTEGEREnumLiteralDeclaration_4() { return cINTEGEREnumLiteralDeclaration_4; }

		//"INTEGER"
		public Keyword getINTEGERINTEGERKeyword_4_0() { return cINTEGERINTEGERKeyword_4_0; }

		//FUNCTION_NAME
		public EnumLiteralDeclaration getFUNCTION_NAMEEnumLiteralDeclaration_5() { return cFUNCTION_NAMEEnumLiteralDeclaration_5; }

		//"FUNCTION_NAME"
		public Keyword getFUNCTION_NAMEFUNCTION_NAMEKeyword_5_0() { return cFUNCTION_NAMEFUNCTION_NAMEKeyword_5_0; }

		//LINKER_SYMBOL
		public EnumLiteralDeclaration getLINKER_SYMBOLEnumLiteralDeclaration_6() { return cLINKER_SYMBOLEnumLiteralDeclaration_6; }

		//"LINKER_SYMBOL"
		public Keyword getLINKER_SYMBOLLINKER_SYMBOLKeyword_6_0() { return cLINKER_SYMBOLLINKER_SYMBOLKeyword_6_0; }

		//MULTILINE_STRING
		public EnumLiteralDeclaration getMULTILINE_STRINGEnumLiteralDeclaration_7() { return cMULTILINE_STRINGEnumLiteralDeclaration_7; }

		//"MULTILINE_STRING"
		public Keyword getMULTILINE_STRINGMULTILINE_STRINGKeyword_7_0() { return cMULTILINE_STRINGMULTILINE_STRINGKeyword_7_0; }

		//STRING
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_8() { return cSTRINGEnumLiteralDeclaration_8; }

		//"STRING"
		public Keyword getSTRINGSTRINGKeyword_8_0() { return cSTRINGSTRINGKeyword_8_0; }
	}
	
	private ModelElements pModel;
	private ModuleDefElements pModuleDef;
	private AbstractContainerDefElements pAbstractContainerDef;
	private ContainerDefElements pContainerDef;
	private ContainerElementElements pContainerElement;
	private ChoiceContainerDefElements pChoiceContainerDef;
	private ParameterDefElements pParameterDef;
	private AbstractReferenceDefElements pAbstractReferenceDef;
	private ReferenceDefElements pReferenceDef;
	private InstanceReferenceDefElements pInstanceReferenceDef;
	private ForeignReferenceDefElements pForeignReferenceDef;
	private EClassRefElements pEClassRef;
	private EClassRefStarElements pEClassRefStar;
	private TagElements pTag;
	private XML_NAMEElements pXML_NAME;
	private VALUEElements pVALUE;
	private KEYElements pKEY;
	private NUMBERElements pNUMBER;
	private LOWER_MULTIPLICITYElements pLOWER_MULTIPLICITY;
	private UPPER_MULTIPLICITYElements pUPPER_MULTIPLICITY;
	private ParameterTypeElements unknownRuleParameterType;
	private FQNElements pFQN;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ParamDefDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.artop.ecuc.autosar4x.dsl.paramdef.ParamDefDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	("package" packageName=ID)? modules+=ModuleDef*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//ModuleDef:
	//	"module" name=ID ("(" (("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?) ")")? "{"
	//	container+=AbstractContainerDef* "}";
	public ModuleDefElements getModuleDefAccess() {
		return (pModuleDef != null) ? pModuleDef : (pModuleDef = new ModuleDefElements());
	}
	
	public ParserRule getModuleDefRule() {
		return getModuleDefAccess().getRule();
	}

	//AbstractContainerDef:
	//	ContainerDef | ChoiceContainerDef;
	public AbstractContainerDefElements getAbstractContainerDefAccess() {
		return (pAbstractContainerDef != null) ? pAbstractContainerDef : (pAbstractContainerDef = new AbstractContainerDefElements());
	}
	
	public ParserRule getAbstractContainerDefRule() {
		return getAbstractContainerDefAccess().getRule();
	}

	//ContainerDef:
	//	"container" name=ID ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags"
	//	tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
	//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")? "{" (container+=AbstractContainerDef | parameter+=ParameterDef |
	//	references+=AbstractReferenceDef)* "}";
	public ContainerDefElements getContainerDefAccess() {
		return (pContainerDef != null) ? pContainerDef : (pContainerDef = new ContainerDefElements());
	}
	
	public ParserRule getContainerDefRule() {
		return getContainerDefAccess().getRule();
	}

	//ContainerElement:
	//	AbstractContainerDef | ParameterDef | ReferenceDef | InstanceReferenceDef;
	public ContainerElementElements getContainerElementAccess() {
		return (pContainerElement != null) ? pContainerElement : (pContainerElement = new ContainerElementElements());
	}
	
	public ParserRule getContainerElementRule() {
		return getContainerElementAccess().getRule();
	}

	//ChoiceContainerDef:
	//	"choice" name=ID ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags"
	//	tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
	//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")? "{" container+=ContainerDef* "}";
	public ChoiceContainerDefElements getChoiceContainerDefAccess() {
		return (pChoiceContainerDef != null) ? pChoiceContainerDef : (pChoiceContainerDef = new ChoiceContainerDefElements());
	}
	
	public ParserRule getChoiceContainerDefRule() {
		return getChoiceContainerDefAccess().getRule();
	}

	//ParameterDef:
	//	"param" name=ID ":" type=ParameterType ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("default"
	//	default=VALUE)? & ("literals" literals+=ID+)? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
	//	("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
	//	upperMultiplicity=UPPER_MULTIPLICITY)? & ("min" min=NUMBER)? & ("max" max=NUMBER)?) ")")?;
	public ParameterDefElements getParameterDefAccess() {
		return (pParameterDef != null) ? pParameterDef : (pParameterDef = new ParameterDefElements());
	}
	
	public ParserRule getParameterDefRule() {
		return getParameterDefAccess().getRule();
	}

	//AbstractReferenceDef:
	//	ReferenceDef | InstanceReferenceDef | ForeignReferenceDef;
	public AbstractReferenceDefElements getAbstractReferenceDefAccess() {
		return (pAbstractReferenceDef != null) ? pAbstractReferenceDef : (pAbstractReferenceDef = new AbstractReferenceDefElements());
	}
	
	public ParserRule getAbstractReferenceDefRule() {
		return getAbstractReferenceDefAccess().getRule();
	}

	//ReferenceDef:
	//	"ref" name=ID ":" types+=[ContainerDef|FQN] ("," types+=[ContainerDef|FQN])* ("(" (("requiresIndex"
	//	(requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)? &
	//	("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
	//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?;
	public ReferenceDefElements getReferenceDefAccess() {
		return (pReferenceDef != null) ? pReferenceDef : (pReferenceDef = new ReferenceDefElements());
	}
	
	public ParserRule getReferenceDefRule() {
		return getReferenceDefAccess().getRule();
	}

	//InstanceReferenceDef:
	//	"iref" name=ID ":" (contexts+=EClassRefStar ("," contexts+=EClassRefStar)*)? "->" dest=EClassRef ("("
	//	(("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)? & ("tags" tags+=Tag ("," tags+=Tag)*)?
	//	& ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? & ("upperMultiplicity"
	//	upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?;
	public InstanceReferenceDefElements getInstanceReferenceDefAccess() {
		return (pInstanceReferenceDef != null) ? pInstanceReferenceDef : (pInstanceReferenceDef = new InstanceReferenceDefElements());
	}
	
	public ParserRule getInstanceReferenceDefRule() {
		return getInstanceReferenceDefAccess().getRule();
	}

	//ForeignReferenceDef:
	//	"fref" name=ID ":" dest=EClassRef ("(" (("requiresIndex" (requiresIndex?="true" | "false"))? & ("desc" desc=STRING)?
	//	& ("tags" tags+=Tag ("," tags+=Tag)*)? & ("lowerMultiplicity" lowerMultiplicity=LOWER_MULTIPLICITY)? &
	//	("upperMultiplicity" upperMultiplicity=UPPER_MULTIPLICITY)?) ")")?;
	public ForeignReferenceDefElements getForeignReferenceDefAccess() {
		return (pForeignReferenceDef != null) ? pForeignReferenceDef : (pForeignReferenceDef = new ForeignReferenceDefElements());
	}
	
	public ParserRule getForeignReferenceDefRule() {
		return getForeignReferenceDefAccess().getRule();
	}

	//EClassRef:
	//	target=[ecore::EClass|XML_NAME];
	public EClassRefElements getEClassRefAccess() {
		return (pEClassRef != null) ? pEClassRef : (pEClassRef = new EClassRefElements());
	}
	
	public ParserRule getEClassRefRule() {
		return getEClassRefAccess().getRule();
	}

	//EClassRefStar:
	//	target=[ecore::EClass|XML_NAME] star="*"?;
	public EClassRefStarElements getEClassRefStarAccess() {
		return (pEClassRefStar != null) ? pEClassRefStar : (pEClassRefStar = new EClassRefStarElements());
	}
	
	public ParserRule getEClassRefStarRule() {
		return getEClassRefStarAccess().getRule();
	}

	//Tag:
	//	key=KEY "->" value=VALUE;
	public TagElements getTagAccess() {
		return (pTag != null) ? pTag : (pTag = new TagElements());
	}
	
	public ParserRule getTagRule() {
		return getTagAccess().getRule();
	}

	//XML_NAME:
	//	ID ("-" ID)*;
	public XML_NAMEElements getXML_NAMEAccess() {
		return (pXML_NAME != null) ? pXML_NAME : (pXML_NAME = new XML_NAMEElements());
	}
	
	public ParserRule getXML_NAMERule() {
		return getXML_NAMEAccess().getRule();
	}

	//VALUE:
	//	STRING | ID | NUMBER | "true" | "false";
	public VALUEElements getVALUEAccess() {
		return (pVALUE != null) ? pVALUE : (pVALUE = new VALUEElements());
	}
	
	public ParserRule getVALUERule() {
		return getVALUEAccess().getRule();
	}

	//KEY:
	//	STRING | ID | NUMBER | "true" | "false";
	public KEYElements getKEYAccess() {
		return (pKEY != null) ? pKEY : (pKEY = new KEYElements());
	}
	
	public ParserRule getKEYRule() {
		return getKEYAccess().getRule();
	}

	//NUMBER:
	//	INT ("." INT)?;
	public NUMBERElements getNUMBERAccess() {
		return (pNUMBER != null) ? pNUMBER : (pNUMBER = new NUMBERElements());
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}

	//LOWER_MULTIPLICITY:
	//	INT;
	public LOWER_MULTIPLICITYElements getLOWER_MULTIPLICITYAccess() {
		return (pLOWER_MULTIPLICITY != null) ? pLOWER_MULTIPLICITY : (pLOWER_MULTIPLICITY = new LOWER_MULTIPLICITYElements());
	}
	
	public ParserRule getLOWER_MULTIPLICITYRule() {
		return getLOWER_MULTIPLICITYAccess().getRule();
	}

	//UPPER_MULTIPLICITY:
	//	INT | "*";
	public UPPER_MULTIPLICITYElements getUPPER_MULTIPLICITYAccess() {
		return (pUPPER_MULTIPLICITY != null) ? pUPPER_MULTIPLICITY : (pUPPER_MULTIPLICITY = new UPPER_MULTIPLICITYElements());
	}
	
	public ParserRule getUPPER_MULTIPLICITYRule() {
		return getUPPER_MULTIPLICITYAccess().getRule();
	}

	//enum ParameterType:
	//	ADD_INFO | BOOLEAN | ENUM | FLOAT | INTEGER | FUNCTION_NAME | LINKER_SYMBOL | MULTILINE_STRING | STRING;
	public ParameterTypeElements getParameterTypeAccess() {
		return (unknownRuleParameterType != null) ? unknownRuleParameterType : (unknownRuleParameterType = new ParameterTypeElements());
	}
	
	public EnumRule getParameterTypeRule() {
		return getParameterTypeAccess().getRule();
	}

	//FQN:
	//	ID ("/" ID)*;
	public FQNElements getFQNAccess() {
		return (pFQN != null) ? pFQN : (pFQN = new FQNElements());
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
